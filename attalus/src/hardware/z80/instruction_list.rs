// mnemonic, changes: ld becomes ld16 for 16 bit operands. ditto inc, dec, add,
// adc, sbc.
// `in` is split into 3: `in_n` for the instruction taking its address from n
// `in_c` for the one taking its address from C and `in_f` for the one that just
// sets flags. Also these instructions don't take their arguments in parentheses
// because that makes no sense.
#[macro_export]
macro_rules! process_instructions {
    (@ $macro_name: ident, $d: ident, $e: ident, $n: ident, $nn: ident,
        $(
            [
                $(
                    $content: tt
                )*
            ]
        )*
    ) => {{
        $(
            $macro_name!($($content)*);
        )*
    }};

    ($macro_name: ident, $d: ident, $e: ident, $n: ident, $nn: ident) => {
        process_instructions! {@ $macro_name, $d, $e, $n, $nn,
[ [0x00                ] ; nop             ; [                 ] ;  4 ; false ]
[ [0x01, n, n          ] ; ld16            ; [ BC, $nn         ] ; 10 ; false ]
[ [0x02                ] ; ld              ; [ (BC), A         ] ;  7 ; false ]
[ [0x03                ] ; inc16           ; [ BC              ] ;  6 ; false ]
[ [0x04                ] ; inc             ; [ B               ] ;  4 ; false ]
[ [0x05                ] ; dec             ; [ B               ] ;  4 ; false ]
[ [0x06, n             ] ; ld              ; [ B, $n           ] ;  7 ; false ]
[ [0x07                ] ; rlca            ; [                 ] ;  4 ; false ]
[ [0x08                ] ; ex              ; [ AF, AF0         ] ;  4 ; false ]
[ [0x09                ] ; add16           ; [ HL, BC          ] ; 11 ; false ]
[ [0x0A                ] ; ld              ; [ A, (BC)         ] ;  7 ; false ]
[ [0x0B                ] ; dec16           ; [ BC              ] ;  6 ; false ]
[ [0x0C                ] ; inc             ; [ C               ] ;  4 ; false ]
[ [0x0D                ] ; dec             ; [ C               ] ;  4 ; false ]
[ [0x0E, n             ] ; ld              ; [ C, $n           ] ;  7 ; false ]
[ [0x0F                ] ; rrca            ; [                 ] ;  4 ; false ]
[ [0x10, e             ] ; djnz            ; [ $e              ] ;  8 ; false ]
[ [0x11, n, n          ] ; ld16            ; [ DE, $nn         ] ; 10 ; false ]
[ [0x12                ] ; ld              ; [ (DE), A         ] ;  7 ; false ]
[ [0x13                ] ; inc16           ; [ DE              ] ;  6 ; false ]
[ [0x14                ] ; inc             ; [ D               ] ;  4 ; false ]
[ [0x15                ] ; dec             ; [ D               ] ;  4 ; false ]
[ [0x16, n             ] ; ld              ; [ D, $n           ] ;  7 ; false ]
[ [0x17                ] ; rla             ; [                 ] ;  4 ; false ]
[ [0x18, e             ] ; jr              ; [ $e              ] ; 12 ; false ]
[ [0x19                ] ; add16           ; [ HL, DE          ] ; 11 ; false ]
[ [0x1A                ] ; ld              ; [ A, (DE)         ] ;  7 ; false ]
[ [0x1B                ] ; dec16           ; [ DE              ] ;  6 ; false ]
[ [0x1C                ] ; inc             ; [ E               ] ;  4 ; false ]
[ [0x1D                ] ; dec             ; [ E               ] ;  4 ; false ]
[ [0x1E, n             ] ; ld              ; [ E, $n           ] ;  7 ; false ]
[ [0x1F                ] ; rra             ; [                 ] ;  4 ; false ]
[ [0x20, e             ] ; jrcc            ; [ NZcc, $e        ] ;  0 ; false ]
[ [0x21, n, n          ] ; ld16            ; [ HL, $nn         ] ; 10 ; false ]
[ [0x22, n, n          ] ; ld16            ; [ ($nn), HL       ] ; 16 ; false ]
[ [0x23                ] ; inc16           ; [ HL              ] ;  6 ; false ]
[ [0x24                ] ; inc             ; [ H               ] ;  4 ; false ]
[ [0x25                ] ; dec             ; [ H               ] ;  4 ; false ]
[ [0x26, n             ] ; ld              ; [ H, $n           ] ;  7 ; false ]
[ [0x27                ] ; daa             ; [                 ] ;  4 ; false ]
[ [0x28, e             ] ; jrcc            ; [ Zcc, $e         ] ;  0 ; false ]
[ [0x29                ] ; add16           ; [ HL, HL          ] ; 11 ; false ]
[ [0x2A, n, n          ] ; ld16            ; [ HL, ($nn)       ] ; 16 ; false ]
[ [0x2B                ] ; dec16           ; [ HL              ] ;  6 ; false ]
[ [0x2C                ] ; inc             ; [ L               ] ;  4 ; false ]
[ [0x2D                ] ; dec             ; [ L               ] ;  4 ; false ]
[ [0x2E, n             ] ; ld              ; [ L, $n           ] ;  7 ; false ]
[ [0x2F                ] ; cpl             ; [                 ] ;  4 ; false ]
[ [0x30, e             ] ; jrcc            ; [ NCcc, $e        ] ;  0 ; false ]
[ [0x31, n, n          ] ; ld16            ; [ SP, $nn         ] ; 10 ; false ]
[ [0x32, n, n          ] ; ld              ; [ ($nn), A        ] ; 13 ; false ]
[ [0x33                ] ; inc16           ; [ SP              ] ;  6 ; false ]
[ [0x34                ] ; inc             ; [ (HL)            ] ; 11 ; false ]
[ [0x35                ] ; dec             ; [ (HL)            ] ; 11 ; false ]
[ [0x36, n             ] ; ld              ; [ (HL), $n        ] ; 10 ; false ]
[ [0x37                ] ; scf             ; [                 ] ;  4 ; false ]
[ [0x38, e             ] ; jrcc            ; [ Ccc, $e         ] ;  0 ; false ]
[ [0x39                ] ; add16           ; [ HL, SP          ] ; 11 ; false ]
[ [0x3A, n, n          ] ; ld              ; [ A, ($nn)        ] ; 13 ; false ]
[ [0x3B                ] ; dec16           ; [ SP              ] ;  6 ; false ]
[ [0x3C                ] ; inc             ; [ A               ] ;  4 ; false ]
[ [0x3D                ] ; dec             ; [ A               ] ;  4 ; false ]
[ [0x3E, n             ] ; ld              ; [ A, $n           ] ;  7 ; false ]
[ [0x3F                ] ; ccf             ; [                 ] ;  4 ; false ]
[ [0x40                ] ; ld              ; [ B, B            ] ;  4 ; false ]
[ [0x41                ] ; ld              ; [ B, C            ] ;  4 ; false ]
[ [0x42                ] ; ld              ; [ B, D            ] ;  4 ; false ]
[ [0x43                ] ; ld              ; [ B, E            ] ;  4 ; false ]
[ [0x44                ] ; ld              ; [ B, H            ] ;  4 ; false ]
[ [0x45                ] ; ld              ; [ B, L            ] ;  4 ; false ]
[ [0x46                ] ; ld              ; [ B, (HL)         ] ;  7 ; false ]
[ [0x47                ] ; ld              ; [ B, A            ] ;  4 ; false ]
[ [0x48                ] ; ld              ; [ C, B            ] ;  4 ; false ]
[ [0x49                ] ; ld              ; [ C, C            ] ;  4 ; false ]
[ [0x4A                ] ; ld              ; [ C, D            ] ;  4 ; false ]
[ [0x4B                ] ; ld              ; [ C, E            ] ;  4 ; false ]
[ [0x4C                ] ; ld              ; [ C, H            ] ;  4 ; false ]
[ [0x4D                ] ; ld              ; [ C, L            ] ;  4 ; false ]
[ [0x4E                ] ; ld              ; [ C, (HL)         ] ;  7 ; false ]
[ [0x4F                ] ; ld              ; [ C, A            ] ;  4 ; false ]
[ [0x50                ] ; ld              ; [ D, B            ] ;  4 ; false ]
[ [0x51                ] ; ld              ; [ D, C            ] ;  4 ; false ]
[ [0x52                ] ; ld              ; [ D, D            ] ;  4 ; false ]
[ [0x53                ] ; ld              ; [ D, E            ] ;  4 ; false ]
[ [0x54                ] ; ld              ; [ D, H            ] ;  4 ; false ]
[ [0x55                ] ; ld              ; [ D, L            ] ;  4 ; false ]
[ [0x56                ] ; ld              ; [ D, (HL)         ] ;  7 ; false ]
[ [0x57                ] ; ld              ; [ D, A            ] ;  4 ; false ]
[ [0x58                ] ; ld              ; [ E, B            ] ;  4 ; false ]
[ [0x59                ] ; ld              ; [ E, C            ] ;  4 ; false ]
[ [0x5A                ] ; ld              ; [ E, D            ] ;  4 ; false ]
[ [0x5B                ] ; ld              ; [ E, E            ] ;  4 ; false ]
[ [0x5C                ] ; ld              ; [ E, H            ] ;  4 ; false ]
[ [0x5D                ] ; ld              ; [ E, L            ] ;  4 ; false ]
[ [0x5E                ] ; ld              ; [ E, (HL)         ] ;  7 ; false ]
[ [0x5F                ] ; ld              ; [ E, A            ] ;  4 ; false ]
[ [0x60                ] ; ld              ; [ H, B            ] ;  4 ; false ]
[ [0x61                ] ; ld              ; [ H, C            ] ;  4 ; false ]
[ [0x62                ] ; ld              ; [ H, D            ] ;  4 ; false ]
[ [0x63                ] ; ld              ; [ H, E            ] ;  4 ; false ]
[ [0x64                ] ; ld              ; [ H, H            ] ;  4 ; false ]
[ [0x65                ] ; ld              ; [ H, L            ] ;  4 ; false ]
[ [0x66                ] ; ld              ; [ H, (HL)         ] ;  7 ; false ]
[ [0x67                ] ; ld              ; [ H, A            ] ;  4 ; false ]
[ [0x68                ] ; ld              ; [ L, B            ] ;  4 ; false ]
[ [0x69                ] ; ld              ; [ L, C            ] ;  4 ; false ]
[ [0x6A                ] ; ld              ; [ L, D            ] ;  4 ; false ]
[ [0x6B                ] ; ld              ; [ L, E            ] ;  4 ; false ]
[ [0x6C                ] ; ld              ; [ L, H            ] ;  4 ; false ]
[ [0x6D                ] ; ld              ; [ L, L            ] ;  4 ; false ]
[ [0x6E                ] ; ld              ; [ L, (HL)         ] ;  7 ; false ]
[ [0x6F                ] ; ld              ; [ L, A            ] ;  4 ; false ]
[ [0x70                ] ; ld              ; [ (HL), B         ] ;  7 ; false ]
[ [0x71                ] ; ld              ; [ (HL), C         ] ;  7 ; false ]
[ [0x72                ] ; ld              ; [ (HL), D         ] ;  7 ; false ]
[ [0x73                ] ; ld              ; [ (HL), E         ] ;  7 ; false ]
[ [0x74                ] ; ld              ; [ (HL), H         ] ;  7 ; false ]
[ [0x75                ] ; ld              ; [ (HL), L         ] ;  7 ; false ]
[ [0x76                ] ; halt            ; [                 ] ;  4 ; false ]
[ [0x77                ] ; ld              ; [ (HL), A         ] ;  7 ; false ]
[ [0x78                ] ; ld              ; [ A, B            ] ;  4 ; false ]
[ [0x79                ] ; ld              ; [ A, C            ] ;  4 ; false ]
[ [0x7A                ] ; ld              ; [ A, D            ] ;  4 ; false ]
[ [0x7B                ] ; ld              ; [ A, E            ] ;  4 ; false ]
[ [0x7C                ] ; ld              ; [ A, H            ] ;  4 ; false ]
[ [0x7D                ] ; ld              ; [ A, L            ] ;  4 ; false ]
[ [0x7E                ] ; ld              ; [ A, (HL)         ] ;  7 ; false ]
[ [0x7F                ] ; ld              ; [ A, A            ] ;  4 ; false ]
[ [0x80                ] ; add             ; [ A, B            ] ;  4 ; false ]
[ [0x81                ] ; add             ; [ A, C            ] ;  4 ; false ]
[ [0x82                ] ; add             ; [ A, D            ] ;  4 ; false ]
[ [0x83                ] ; add             ; [ A, E            ] ;  4 ; false ]
[ [0x84                ] ; add             ; [ A, H            ] ;  4 ; false ]
[ [0x85                ] ; add             ; [ A, L            ] ;  4 ; false ]
[ [0x86                ] ; add             ; [ A, (HL)         ] ;  7 ; false ]
[ [0x87                ] ; add             ; [ A, A            ] ;  4 ; false ]
[ [0x88                ] ; adc             ; [ A, B            ] ;  4 ; false ]
[ [0x89                ] ; adc             ; [ A, C            ] ;  4 ; false ]
[ [0x8A                ] ; adc             ; [ A, D            ] ;  4 ; false ]
[ [0x8B                ] ; adc             ; [ A, E            ] ;  4 ; false ]
[ [0x8C                ] ; adc             ; [ A, H            ] ;  4 ; false ]
[ [0x8D                ] ; adc             ; [ A, L            ] ;  4 ; false ]
[ [0x8E                ] ; adc             ; [ A, (HL)         ] ;  7 ; false ]
[ [0x8F                ] ; adc             ; [ A, A            ] ;  4 ; false ]
[ [0x90                ] ; sub             ; [ A, B            ] ;  4 ; false ]
[ [0x91                ] ; sub             ; [ A, C            ] ;  4 ; false ]
[ [0x92                ] ; sub             ; [ A, D            ] ;  4 ; false ]
[ [0x93                ] ; sub             ; [ A, E            ] ;  4 ; false ]
[ [0x94                ] ; sub             ; [ A, H            ] ;  4 ; false ]
[ [0x95                ] ; sub             ; [ A, L            ] ;  4 ; false ]
[ [0x96                ] ; sub             ; [ A, (HL)         ] ;  7 ; false ]
[ [0x97                ] ; sub             ; [ A, A            ] ;  4 ; false ]
[ [0x98                ] ; sbc             ; [ A, B            ] ;  4 ; false ]
[ [0x99                ] ; sbc             ; [ A, C            ] ;  4 ; false ]
[ [0x9A                ] ; sbc             ; [ A, D            ] ;  4 ; false ]
[ [0x9B                ] ; sbc             ; [ A, E            ] ;  4 ; false ]
[ [0x9C                ] ; sbc             ; [ A, H            ] ;  4 ; false ]
[ [0x9D                ] ; sbc             ; [ A, L            ] ;  4 ; false ]
[ [0x9E                ] ; sbc             ; [ A, (HL)         ] ;  7 ; false ]
[ [0x9F                ] ; sbc             ; [ A, A            ] ;  4 ; false ]
[ [0xA0                ] ; and             ; [ B               ] ;  4 ; false ]
[ [0xA1                ] ; and             ; [ C               ] ;  4 ; false ]
[ [0xA2                ] ; and             ; [ D               ] ;  4 ; false ]
[ [0xA3                ] ; and             ; [ E               ] ;  4 ; false ]
[ [0xA4                ] ; and             ; [ H               ] ;  4 ; false ]
[ [0xA5                ] ; and             ; [ L               ] ;  4 ; false ]
[ [0xA6                ] ; and             ; [ (HL)            ] ;  7 ; false ]
[ [0xA7                ] ; and             ; [ A               ] ;  4 ; false ]
[ [0xA8                ] ; xor             ; [ B               ] ;  4 ; false ]
[ [0xA9                ] ; xor             ; [ C               ] ;  4 ; false ]
[ [0xAA                ] ; xor             ; [ D               ] ;  4 ; false ]
[ [0xAB                ] ; xor             ; [ E               ] ;  4 ; false ]
[ [0xAC                ] ; xor             ; [ H               ] ;  4 ; false ]
[ [0xAD                ] ; xor             ; [ L               ] ;  4 ; false ]
[ [0xAE                ] ; xor             ; [ (HL)            ] ;  7 ; false ]
[ [0xAF                ] ; xor             ; [ A               ] ;  4 ; false ]
[ [0xB0                ] ; or              ; [ B               ] ;  4 ; false ]
[ [0xB1                ] ; or              ; [ C               ] ;  4 ; false ]
[ [0xB2                ] ; or              ; [ D               ] ;  4 ; false ]
[ [0xB3                ] ; or              ; [ E               ] ;  4 ; false ]
[ [0xB4                ] ; or              ; [ H               ] ;  4 ; false ]
[ [0xB5                ] ; or              ; [ L               ] ;  4 ; false ]
[ [0xB6                ] ; or              ; [ (HL)            ] ;  7 ; false ]
[ [0xB7                ] ; or              ; [ A               ] ;  4 ; false ]
[ [0xB8                ] ; cp              ; [ B               ] ;  4 ; false ]
[ [0xB9                ] ; cp              ; [ C               ] ;  4 ; false ]
[ [0xBA                ] ; cp              ; [ D               ] ;  4 ; false ]
[ [0xBB                ] ; cp              ; [ E               ] ;  4 ; false ]
[ [0xBC                ] ; cp              ; [ H               ] ;  4 ; false ]
[ [0xBD                ] ; cp              ; [ L               ] ;  4 ; false ]
[ [0xBE                ] ; cp              ; [ (HL)            ] ;  7 ; false ]
[ [0xBF                ] ; cp              ; [ A               ] ;  4 ; false ]
[ [0xC0                ] ; retcc           ; [ NZcc            ] ;  5 ; false ]
[ [0xC1                ] ; pop             ; [ BC              ] ; 10 ; false ]
[ [0xC2, n, n          ] ; jpcc            ; [ NZcc, $nn       ] ; 10 ; false ]
[ [0xC3, n, n          ] ; jp              ; [ $nn             ] ; 10 ; false ]
[ [0xC4, n, n          ] ; callcc          ; [ NZcc, $nn       ] ;  0 ; false ]
[ [0xC5                ] ; push            ; [ BC              ] ; 11 ; false ]
[ [0xC6, n             ] ; add             ; [ A, $n           ] ;  7 ; false ]
[ [0xC7                ] ; rst             ; [ 0x00            ] ; 11 ; false ]
[ [0xC8                ] ; retcc           ; [ Zcc             ] ;  5 ; false ]
[ [0xC9                ] ; ret             ; [                 ] ; 10 ; false ]
[ [0xCA, n, n          ] ; jpcc            ; [ Zcc, $nn        ] ; 10 ; false ]
[ [0xCB, 0x00          ] ; rlc             ; [ B               ] ;  8 ; false ]
[ [0xCB, 0x01          ] ; rlc             ; [ C               ] ;  8 ; false ]
[ [0xCB, 0x02          ] ; rlc             ; [ D               ] ;  8 ; false ]
[ [0xCB, 0x03          ] ; rlc             ; [ E               ] ;  8 ; false ]
[ [0xCB, 0x04          ] ; rlc             ; [ H               ] ;  8 ; false ]
[ [0xCB, 0x05          ] ; rlc             ; [ L               ] ;  8 ; false ]
[ [0xCB, 0x06          ] ; rlc             ; [ (HL)            ] ; 15 ; false ]
[ [0xCB, 0x07          ] ; rlc             ; [ A               ] ;  8 ; false ]
[ [0xCB, 0x08          ] ; rrc             ; [ B               ] ;  8 ; false ]
[ [0xCB, 0x09          ] ; rrc             ; [ C               ] ;  8 ; false ]
[ [0xCB, 0x0A          ] ; rrc             ; [ D               ] ;  8 ; false ]
[ [0xCB, 0x0B          ] ; rrc             ; [ E               ] ;  8 ; false ]
[ [0xCB, 0x0C          ] ; rrc             ; [ H               ] ;  8 ; false ]
[ [0xCB, 0x0D          ] ; rrc             ; [ L               ] ;  8 ; false ]
[ [0xCB, 0x0E          ] ; rrc             ; [ (HL)            ] ; 15 ; false ]
[ [0xCB, 0x0F          ] ; rrc             ; [ A               ] ;  8 ; false ]
[ [0xCB, 0x10          ] ; rl              ; [ B               ] ;  8 ; false ]
[ [0xCB, 0x11          ] ; rl              ; [ C               ] ;  8 ; false ]
[ [0xCB, 0x12          ] ; rl              ; [ D               ] ;  8 ; false ]
[ [0xCB, 0x13          ] ; rl              ; [ E               ] ;  8 ; false ]
[ [0xCB, 0x14          ] ; rl              ; [ H               ] ;  8 ; false ]
[ [0xCB, 0x15          ] ; rl              ; [ L               ] ;  8 ; false ]
[ [0xCB, 0x16          ] ; rl              ; [ (HL)            ] ; 15 ; false ]
[ [0xCB, 0x17          ] ; rl              ; [ A               ] ;  8 ; false ]
[ [0xCB, 0x18          ] ; rr              ; [ B               ] ;  8 ; false ]
[ [0xCB, 0x19          ] ; rr              ; [ C               ] ;  8 ; false ]
[ [0xCB, 0x1A          ] ; rr              ; [ D               ] ;  8 ; false ]
[ [0xCB, 0x1B          ] ; rr              ; [ E               ] ;  8 ; false ]
[ [0xCB, 0x1C          ] ; rr              ; [ H               ] ;  8 ; false ]
[ [0xCB, 0x1D          ] ; rr              ; [ L               ] ;  8 ; false ]
[ [0xCB, 0x1E          ] ; rr              ; [ (HL)            ] ; 15 ; false ]
[ [0xCB, 0x1F          ] ; rr              ; [ A               ] ;  8 ; false ]
[ [0xCB, 0x20          ] ; sla             ; [ B               ] ;  8 ; false ]
[ [0xCB, 0x21          ] ; sla             ; [ C               ] ;  8 ; false ]
[ [0xCB, 0x22          ] ; sla             ; [ D               ] ;  8 ; false ]
[ [0xCB, 0x23          ] ; sla             ; [ E               ] ;  8 ; false ]
[ [0xCB, 0x24          ] ; sla             ; [ H               ] ;  8 ; false ]
[ [0xCB, 0x25          ] ; sla             ; [ L               ] ;  8 ; false ]
[ [0xCB, 0x26          ] ; sla             ; [ (HL)            ] ; 15 ; false ]
[ [0xCB, 0x27          ] ; sla             ; [ A               ] ;  8 ; false ]
[ [0xCB, 0x28          ] ; sra             ; [ B               ] ;  8 ; false ]
[ [0xCB, 0x29          ] ; sra             ; [ C               ] ;  8 ; false ]
[ [0xCB, 0x2A          ] ; sra             ; [ D               ] ;  8 ; false ]
[ [0xCB, 0x2B          ] ; sra             ; [ E               ] ;  8 ; false ]
[ [0xCB, 0x2C          ] ; sra             ; [ H               ] ;  8 ; false ]
[ [0xCB, 0x2D          ] ; sra             ; [ L               ] ;  8 ; false ]
[ [0xCB, 0x2E          ] ; sra             ; [ (HL)            ] ; 15 ; false ]
[ [0xCB, 0x2F          ] ; sra             ; [ A               ] ;  8 ; false ]
[ [0xCB, 0x30          ] ; sll             ; [ B               ] ;  8 ;  true ]
[ [0xCB, 0x31          ] ; sll             ; [ C               ] ;  8 ;  true ]
[ [0xCB, 0x32          ] ; sll             ; [ D               ] ;  8 ;  true ]
[ [0xCB, 0x33          ] ; sll             ; [ E               ] ;  8 ;  true ]
[ [0xCB, 0x34          ] ; sll             ; [ H               ] ;  8 ;  true ]
[ [0xCB, 0x35          ] ; sll             ; [ L               ] ;  8 ;  true ]
[ [0xCB, 0x36          ] ; sll             ; [ (HL)            ] ; 15 ;  true ]
[ [0xCB, 0x37          ] ; sll             ; [ A               ] ;  8 ;  true ]
[ [0xCB, 0x38          ] ; srl             ; [ B               ] ;  8 ; false ]
[ [0xCB, 0x39          ] ; srl             ; [ C               ] ;  8 ; false ]
[ [0xCB, 0x3A          ] ; srl             ; [ D               ] ;  8 ; false ]
[ [0xCB, 0x3B          ] ; srl             ; [ E               ] ;  8 ; false ]
[ [0xCB, 0x3C          ] ; srl             ; [ H               ] ;  8 ; false ]
[ [0xCB, 0x3D          ] ; srl             ; [ L               ] ;  8 ; false ]
[ [0xCB, 0x3E          ] ; srl             ; [ (HL)            ] ; 15 ; false ]
[ [0xCB, 0x3F          ] ; srl             ; [ A               ] ;  8 ; false ]
[ [0xCB, 0x40          ] ; bit             ; [ 0, B            ] ;  8 ; false ]
[ [0xCB, 0x41          ] ; bit             ; [ 0, C            ] ;  8 ; false ]
[ [0xCB, 0x42          ] ; bit             ; [ 0, D            ] ;  8 ; false ]
[ [0xCB, 0x43          ] ; bit             ; [ 0, E            ] ;  8 ; false ]
[ [0xCB, 0x44          ] ; bit             ; [ 0, H            ] ;  8 ; false ]
[ [0xCB, 0x45          ] ; bit             ; [ 0, L            ] ;  8 ; false ]
[ [0xCB, 0x46          ] ; bit             ; [ 0, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x47          ] ; bit             ; [ 0, A            ] ;  8 ; false ]
[ [0xCB, 0x48          ] ; bit             ; [ 1, B            ] ;  8 ; false ]
[ [0xCB, 0x49          ] ; bit             ; [ 1, C            ] ;  8 ; false ]
[ [0xCB, 0x4A          ] ; bit             ; [ 1, D            ] ;  8 ; false ]
[ [0xCB, 0x4B          ] ; bit             ; [ 1, E            ] ;  8 ; false ]
[ [0xCB, 0x4C          ] ; bit             ; [ 1, H            ] ;  8 ; false ]
[ [0xCB, 0x4D          ] ; bit             ; [ 1, L            ] ;  8 ; false ]
[ [0xCB, 0x4E          ] ; bit             ; [ 1, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x4F          ] ; bit             ; [ 1, A            ] ;  8 ; false ]
[ [0xCB, 0x50          ] ; bit             ; [ 2, B            ] ;  8 ; false ]
[ [0xCB, 0x51          ] ; bit             ; [ 2, C            ] ;  8 ; false ]
[ [0xCB, 0x52          ] ; bit             ; [ 2, D            ] ;  8 ; false ]
[ [0xCB, 0x53          ] ; bit             ; [ 2, E            ] ;  8 ; false ]
[ [0xCB, 0x54          ] ; bit             ; [ 2, H            ] ;  8 ; false ]
[ [0xCB, 0x55          ] ; bit             ; [ 2, L            ] ;  8 ; false ]
[ [0xCB, 0x56          ] ; bit             ; [ 2, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x57          ] ; bit             ; [ 2, A            ] ;  8 ; false ]
[ [0xCB, 0x58          ] ; bit             ; [ 3, B            ] ;  8 ; false ]
[ [0xCB, 0x59          ] ; bit             ; [ 3, C            ] ;  8 ; false ]
[ [0xCB, 0x5A          ] ; bit             ; [ 3, D            ] ;  8 ; false ]
[ [0xCB, 0x5B          ] ; bit             ; [ 3, E            ] ;  8 ; false ]
[ [0xCB, 0x5C          ] ; bit             ; [ 3, H            ] ;  8 ; false ]
[ [0xCB, 0x5D          ] ; bit             ; [ 3, L            ] ;  8 ; false ]
[ [0xCB, 0x5E          ] ; bit             ; [ 3, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x5F          ] ; bit             ; [ 3, A            ] ;  8 ; false ]
[ [0xCB, 0x60          ] ; bit             ; [ 4, B            ] ;  8 ; false ]
[ [0xCB, 0x61          ] ; bit             ; [ 4, C            ] ;  8 ; false ]
[ [0xCB, 0x62          ] ; bit             ; [ 4, D            ] ;  8 ; false ]
[ [0xCB, 0x63          ] ; bit             ; [ 4, E            ] ;  8 ; false ]
[ [0xCB, 0x64          ] ; bit             ; [ 4, H            ] ;  8 ; false ]
[ [0xCB, 0x65          ] ; bit             ; [ 4, L            ] ;  8 ; false ]
[ [0xCB, 0x66          ] ; bit             ; [ 4, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x67          ] ; bit             ; [ 4, A            ] ;  8 ; false ]
[ [0xCB, 0x68          ] ; bit             ; [ 5, B            ] ;  8 ; false ]
[ [0xCB, 0x69          ] ; bit             ; [ 5, C            ] ;  8 ; false ]
[ [0xCB, 0x6A          ] ; bit             ; [ 5, D            ] ;  8 ; false ]
[ [0xCB, 0x6B          ] ; bit             ; [ 5, E            ] ;  8 ; false ]
[ [0xCB, 0x6C          ] ; bit             ; [ 5, H            ] ;  8 ; false ]
[ [0xCB, 0x6D          ] ; bit             ; [ 5, L            ] ;  8 ; false ]
[ [0xCB, 0x6E          ] ; bit             ; [ 5, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x6F          ] ; bit             ; [ 5, A            ] ;  8 ; false ]
[ [0xCB, 0x70          ] ; bit             ; [ 6, B            ] ;  8 ; false ]
[ [0xCB, 0x71          ] ; bit             ; [ 6, C            ] ;  8 ; false ]
[ [0xCB, 0x72          ] ; bit             ; [ 6, D            ] ;  8 ; false ]
[ [0xCB, 0x73          ] ; bit             ; [ 6, E            ] ;  8 ; false ]
[ [0xCB, 0x74          ] ; bit             ; [ 6, H            ] ;  8 ; false ]
[ [0xCB, 0x75          ] ; bit             ; [ 6, L            ] ;  8 ; false ]
[ [0xCB, 0x76          ] ; bit             ; [ 6, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x77          ] ; bit             ; [ 6, A            ] ;  8 ; false ]
[ [0xCB, 0x78          ] ; bit             ; [ 7, B            ] ;  8 ; false ]
[ [0xCB, 0x79          ] ; bit             ; [ 7, C            ] ;  8 ; false ]
[ [0xCB, 0x7A          ] ; bit             ; [ 7, D            ] ;  8 ; false ]
[ [0xCB, 0x7B          ] ; bit             ; [ 7, E            ] ;  8 ; false ]
[ [0xCB, 0x7C          ] ; bit             ; [ 7, H            ] ;  8 ; false ]
[ [0xCB, 0x7D          ] ; bit             ; [ 7, L            ] ;  8 ; false ]
[ [0xCB, 0x7E          ] ; bit             ; [ 7, (HL)         ] ; 12 ; false ]
[ [0xCB, 0x7F          ] ; bit             ; [ 7, A            ] ;  8 ; false ]
[ [0xCB, 0x80          ] ; res             ; [ 0, B            ] ;  8 ; false ]
[ [0xCB, 0x81          ] ; res             ; [ 0, C            ] ;  8 ; false ]
[ [0xCB, 0x82          ] ; res             ; [ 0, D            ] ;  8 ; false ]
[ [0xCB, 0x83          ] ; res             ; [ 0, E            ] ;  8 ; false ]
[ [0xCB, 0x84          ] ; res             ; [ 0, H            ] ;  8 ; false ]
[ [0xCB, 0x85          ] ; res             ; [ 0, L            ] ;  8 ; false ]
[ [0xCB, 0x86          ] ; res             ; [ 0, (HL)         ] ; 15 ; false ]
[ [0xCB, 0x87          ] ; res             ; [ 0, A            ] ;  8 ; false ]
[ [0xCB, 0x88          ] ; res             ; [ 1, B            ] ;  8 ; false ]
[ [0xCB, 0x89          ] ; res             ; [ 1, C            ] ;  8 ; false ]
[ [0xCB, 0x8A          ] ; res             ; [ 1, D            ] ;  8 ; false ]
[ [0xCB, 0x8B          ] ; res             ; [ 1, E            ] ;  8 ; false ]
[ [0xCB, 0x8C          ] ; res             ; [ 1, H            ] ;  8 ; false ]
[ [0xCB, 0x8D          ] ; res             ; [ 1, L            ] ;  8 ; false ]
[ [0xCB, 0x8E          ] ; res             ; [ 1, (HL)         ] ; 15 ; false ]
[ [0xCB, 0x8F          ] ; res             ; [ 1, A            ] ;  8 ; false ]
[ [0xCB, 0x90          ] ; res             ; [ 2, B            ] ;  8 ; false ]
[ [0xCB, 0x91          ] ; res             ; [ 2, C            ] ;  8 ; false ]
[ [0xCB, 0x92          ] ; res             ; [ 2, D            ] ;  8 ; false ]
[ [0xCB, 0x93          ] ; res             ; [ 2, E            ] ;  8 ; false ]
[ [0xCB, 0x94          ] ; res             ; [ 2, H            ] ;  8 ; false ]
[ [0xCB, 0x95          ] ; res             ; [ 2, L            ] ;  8 ; false ]
[ [0xCB, 0x96          ] ; res             ; [ 2, (HL)         ] ; 15 ; false ]
[ [0xCB, 0x97          ] ; res             ; [ 2, A            ] ;  8 ; false ]
[ [0xCB, 0x98          ] ; res             ; [ 3, B            ] ;  8 ; false ]
[ [0xCB, 0x99          ] ; res             ; [ 3, C            ] ;  8 ; false ]
[ [0xCB, 0x9A          ] ; res             ; [ 3, D            ] ;  8 ; false ]
[ [0xCB, 0x9B          ] ; res             ; [ 3, E            ] ;  8 ; false ]
[ [0xCB, 0x9C          ] ; res             ; [ 3, H            ] ;  8 ; false ]
[ [0xCB, 0x9D          ] ; res             ; [ 3, L            ] ;  8 ; false ]
[ [0xCB, 0x9E          ] ; res             ; [ 3, (HL)         ] ; 15 ; false ]
[ [0xCB, 0x9F          ] ; res             ; [ 3, A            ] ;  8 ; false ]
[ [0xCB, 0xA0          ] ; res             ; [ 4, B            ] ;  8 ; false ]
[ [0xCB, 0xA1          ] ; res             ; [ 4, C            ] ;  8 ; false ]
[ [0xCB, 0xA2          ] ; res             ; [ 4, D            ] ;  8 ; false ]
[ [0xCB, 0xA3          ] ; res             ; [ 4, E            ] ;  8 ; false ]
[ [0xCB, 0xA4          ] ; res             ; [ 4, H            ] ;  8 ; false ]
[ [0xCB, 0xA5          ] ; res             ; [ 4, L            ] ;  8 ; false ]
[ [0xCB, 0xA6          ] ; res             ; [ 4, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xA7          ] ; res             ; [ 4, A            ] ;  8 ; false ]
[ [0xCB, 0xA8          ] ; res             ; [ 5, B            ] ;  8 ; false ]
[ [0xCB, 0xA9          ] ; res             ; [ 5, C            ] ;  8 ; false ]
[ [0xCB, 0xAA          ] ; res             ; [ 5, D            ] ;  8 ; false ]
[ [0xCB, 0xAB          ] ; res             ; [ 5, E            ] ;  8 ; false ]
[ [0xCB, 0xAC          ] ; res             ; [ 5, H            ] ;  8 ; false ]
[ [0xCB, 0xAD          ] ; res             ; [ 5, L            ] ;  8 ; false ]
[ [0xCB, 0xAE          ] ; res             ; [ 5, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xAF          ] ; res             ; [ 5, A            ] ;  8 ; false ]
[ [0xCB, 0xB0          ] ; res             ; [ 6, B            ] ;  8 ; false ]
[ [0xCB, 0xB1          ] ; res             ; [ 6, C            ] ;  8 ; false ]
[ [0xCB, 0xB2          ] ; res             ; [ 6, D            ] ;  8 ; false ]
[ [0xCB, 0xB3          ] ; res             ; [ 6, E            ] ;  8 ; false ]
[ [0xCB, 0xB4          ] ; res             ; [ 6, H            ] ;  8 ; false ]
[ [0xCB, 0xB5          ] ; res             ; [ 6, L            ] ;  8 ; false ]
[ [0xCB, 0xB6          ] ; res             ; [ 6, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xB7          ] ; res             ; [ 6, A            ] ;  8 ; false ]
[ [0xCB, 0xB8          ] ; res             ; [ 7, B            ] ;  8 ; false ]
[ [0xCB, 0xB9          ] ; res             ; [ 7, C            ] ;  8 ; false ]
[ [0xCB, 0xBA          ] ; res             ; [ 7, D            ] ;  8 ; false ]
[ [0xCB, 0xBB          ] ; res             ; [ 7, E            ] ;  8 ; false ]
[ [0xCB, 0xBC          ] ; res             ; [ 7, H            ] ;  8 ; false ]
[ [0xCB, 0xBD          ] ; res             ; [ 7, L            ] ;  8 ; false ]
[ [0xCB, 0xBE          ] ; res             ; [ 7, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xBF          ] ; res             ; [ 7, A            ] ;  8 ; false ]
[ [0xCB, 0xC0          ] ; set             ; [ 0, B            ] ;  8 ; false ]
[ [0xCB, 0xC1          ] ; set             ; [ 0, C            ] ;  8 ; false ]
[ [0xCB, 0xC2          ] ; set             ; [ 0, D            ] ;  8 ; false ]
[ [0xCB, 0xC3          ] ; set             ; [ 0, E            ] ;  8 ; false ]
[ [0xCB, 0xC4          ] ; set             ; [ 0, H            ] ;  8 ; false ]
[ [0xCB, 0xC5          ] ; set             ; [ 0, L            ] ;  8 ; false ]
[ [0xCB, 0xC6          ] ; set             ; [ 0, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xC7          ] ; set             ; [ 0, A            ] ;  8 ; false ]
[ [0xCB, 0xC8          ] ; set             ; [ 1, B            ] ;  8 ; false ]
[ [0xCB, 0xC9          ] ; set             ; [ 1, C            ] ;  8 ; false ]
[ [0xCB, 0xCA          ] ; set             ; [ 1, D            ] ;  8 ; false ]
[ [0xCB, 0xCB          ] ; set             ; [ 1, E            ] ;  8 ; false ]
[ [0xCB, 0xCC          ] ; set             ; [ 1, H            ] ;  8 ; false ]
[ [0xCB, 0xCD          ] ; set             ; [ 1, L            ] ;  8 ; false ]
[ [0xCB, 0xCE          ] ; set             ; [ 1, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xCF          ] ; set             ; [ 1, A            ] ;  8 ; false ]
[ [0xCB, 0xD0          ] ; set             ; [ 2, B            ] ;  8 ; false ]
[ [0xCB, 0xD1          ] ; set             ; [ 2, C            ] ;  8 ; false ]
[ [0xCB, 0xD2          ] ; set             ; [ 2, D            ] ;  8 ; false ]
[ [0xCB, 0xD3          ] ; set             ; [ 2, E            ] ;  8 ; false ]
[ [0xCB, 0xD4          ] ; set             ; [ 2, H            ] ;  8 ; false ]
[ [0xCB, 0xD5          ] ; set             ; [ 2, L            ] ;  8 ; false ]
[ [0xCB, 0xD6          ] ; set             ; [ 2, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xD7          ] ; set             ; [ 2, A            ] ;  8 ; false ]
[ [0xCB, 0xD8          ] ; set             ; [ 3, B            ] ;  8 ; false ]
[ [0xCB, 0xD9          ] ; set             ; [ 3, C            ] ;  8 ; false ]
[ [0xCB, 0xDA          ] ; set             ; [ 3, D            ] ;  8 ; false ]
[ [0xCB, 0xDB          ] ; set             ; [ 3, E            ] ;  8 ; false ]
[ [0xCB, 0xDC          ] ; set             ; [ 3, H            ] ;  8 ; false ]
[ [0xCB, 0xDD          ] ; set             ; [ 3, L            ] ;  8 ; false ]
[ [0xCB, 0xDE          ] ; set             ; [ 3, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xDF          ] ; set             ; [ 3, A            ] ;  8 ; false ]
[ [0xCB, 0xE0          ] ; set             ; [ 4, B            ] ;  8 ; false ]
[ [0xCB, 0xE1          ] ; set             ; [ 4, C            ] ;  8 ; false ]
[ [0xCB, 0xE2          ] ; set             ; [ 4, D            ] ;  8 ; false ]
[ [0xCB, 0xE3          ] ; set             ; [ 4, E            ] ;  8 ; false ]
[ [0xCB, 0xE4          ] ; set             ; [ 4, H            ] ;  8 ; false ]
[ [0xCB, 0xE5          ] ; set             ; [ 4, L            ] ;  8 ; false ]
[ [0xCB, 0xE6          ] ; set             ; [ 4, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xE7          ] ; set             ; [ 4, A            ] ;  8 ; false ]
[ [0xCB, 0xE8          ] ; set             ; [ 5, B            ] ;  8 ; false ]
[ [0xCB, 0xE9          ] ; set             ; [ 5, C            ] ;  8 ; false ]
[ [0xCB, 0xEA          ] ; set             ; [ 5, D            ] ;  8 ; false ]
[ [0xCB, 0xEB          ] ; set             ; [ 5, E            ] ;  8 ; false ]
[ [0xCB, 0xEC          ] ; set             ; [ 5, H            ] ;  8 ; false ]
[ [0xCB, 0xED          ] ; set             ; [ 5, L            ] ;  8 ; false ]
[ [0xCB, 0xEE          ] ; set             ; [ 5, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xEF          ] ; set             ; [ 5, A            ] ;  8 ; false ]
[ [0xCB, 0xF0          ] ; set             ; [ 6, B            ] ;  8 ; false ]
[ [0xCB, 0xF1          ] ; set             ; [ 6, C            ] ;  8 ; false ]
[ [0xCB, 0xF2          ] ; set             ; [ 6, D            ] ;  8 ; false ]
[ [0xCB, 0xF3          ] ; set             ; [ 6, E            ] ;  8 ; false ]
[ [0xCB, 0xF4          ] ; set             ; [ 6, H            ] ;  8 ; false ]
[ [0xCB, 0xF5          ] ; set             ; [ 6, L            ] ;  8 ; false ]
[ [0xCB, 0xF6          ] ; set             ; [ 6, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xF7          ] ; set             ; [ 6, A            ] ;  8 ; false ]
[ [0xCB, 0xF8          ] ; set             ; [ 7, B            ] ;  8 ; false ]
[ [0xCB, 0xF9          ] ; set             ; [ 7, C            ] ;  8 ; false ]
[ [0xCB, 0xFA          ] ; set             ; [ 7, D            ] ;  8 ; false ]
[ [0xCB, 0xFB          ] ; set             ; [ 7, E            ] ;  8 ; false ]
[ [0xCB, 0xFC          ] ; set             ; [ 7, H            ] ;  8 ; false ]
[ [0xCB, 0xFD          ] ; set             ; [ 7, L            ] ;  8 ; false ]
[ [0xCB, 0xFE          ] ; set             ; [ 7, (HL)         ] ; 15 ; false ]
[ [0xCB, 0xFF          ] ; set             ; [ 7, A            ] ;  8 ; false ]
[ [0xCC, n, n          ] ; callcc          ; [ Zcc, $nn        ] ;  0 ; false ]
[ [0xCD, n, n          ] ; call            ; [ $nn             ] ; 17 ; false ]
[ [0xCE, n             ] ; adc             ; [ A, $n           ] ;  7 ; false ]
[ [0xCF                ] ; rst             ; [ 0x08            ] ; 11 ; false ]
[ [0xD0                ] ; retcc           ; [ NCcc            ] ;  5 ; false ]
[ [0xD1                ] ; pop             ; [ DE              ] ; 10 ; false ]
[ [0xD2, n, n          ] ; jpcc            ; [ NCcc, $nn       ] ; 10 ; false ]
[ [0xD3, n             ] ; out_n           ; [ $n, A           ] ; 11 ; false ]
[ [0xD4, n, n          ] ; callcc          ; [ NCcc, $nn       ] ;  0 ; false ]
[ [0xD5                ] ; push            ; [ DE              ] ; 11 ; false ]
[ [0xD6, n             ] ; sub             ; [ A, $n           ] ;  7 ; false ]
[ [0xD7                ] ; rst             ; [ 0x10            ] ; 11 ; false ]
[ [0xD8                ] ; retcc           ; [ Ccc             ] ;  5 ; false ]
[ [0xD9                ] ; exx             ; [                 ] ;  4 ; false ]
[ [0xDA, n, n          ] ; jpcc            ; [ Ccc, $nn        ] ; 10 ; false ]
[ [0xDB, n             ] ; in_n            ; [ A, $n           ] ; 11 ; false ]
[ [0xDC, n, n          ] ; callcc          ; [ Ccc, $nn        ] ;  0 ; false ]
[ [0xDD, 0x09          ] ; add16           ; [ IX, BC          ] ; 15 ; false ]
[ [0xDD, 0x19          ] ; add16           ; [ IX, DE          ] ; 15 ; false ]
[ [0xDD, 0x21, n, n    ] ; ld16            ; [ IX, $nn         ] ; 14 ; false ]
[ [0xDD, 0x22, n, n    ] ; ld16            ; [ ($nn), IX       ] ; 20 ; false ]
[ [0xDD, 0x23          ] ; inc16           ; [ IX              ] ; 10 ; false ]
[ [0xDD, 0x24          ] ; inc             ; [ IXH             ] ;  8 ;  true ]
[ [0xDD, 0x25          ] ; dec             ; [ IXH             ] ;  8 ;  true ]
[ [0xDD, 0x26, n       ] ; ld              ; [ IXH, $n         ] ; 11 ;  true ]
[ [0xDD, 0x29          ] ; add16           ; [ IX, IX          ] ; 15 ; false ]
[ [0xDD, 0x2A, n, n    ] ; ld16            ; [ IX, ($nn)       ] ; 20 ; false ]
[ [0xDD, 0x2B          ] ; dec16           ; [ IX              ] ; 10 ; false ]
[ [0xDD, 0x2C          ] ; inc             ; [ IXL             ] ;  8 ;  true ]
[ [0xDD, 0x2D          ] ; dec             ; [ IXL             ] ;  8 ;  true ]
[ [0xDD, 0x2E, n       ] ; ld              ; [ IXL, $n         ] ; 11 ;  true ]
[ [0xDD, 0x34, d       ] ; inc             ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0x35, d       ] ; dec             ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0x36, d, n    ] ; ld              ; [ (IX+d), $n      ] ; 19 ; false ]
[ [0xDD, 0x39          ] ; add16           ; [ IX, SP          ] ; 15 ; false ]
[ [0xDD, 0x44          ] ; ld              ; [ B, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x45          ] ; ld              ; [ B, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x46, d       ] ; ld              ; [ B, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x4C          ] ; ld              ; [ C, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x4D          ] ; ld              ; [ C, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x4E, d       ] ; ld              ; [ C, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x54          ] ; ld              ; [ D, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x55          ] ; ld              ; [ D, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x56, d       ] ; ld              ; [ D, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x5C          ] ; ld              ; [ E, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x5D          ] ; ld              ; [ E, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x5E, d       ] ; ld              ; [ E, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x60          ] ; ld              ; [ IXH, B          ] ;  8 ;  true ]
[ [0xDD, 0x61          ] ; ld              ; [ IXH, C          ] ;  8 ;  true ]
[ [0xDD, 0x62          ] ; ld              ; [ IXH, D          ] ;  8 ;  true ]
[ [0xDD, 0x63          ] ; ld              ; [ IXH, E          ] ;  8 ;  true ]
[ [0xDD, 0x64          ] ; ld              ; [ IXH, IXH        ] ;  8 ;  true ]
[ [0xDD, 0x65          ] ; ld              ; [ IXH, IXL        ] ;  8 ;  true ]
[ [0xDD, 0x66, d       ] ; ld              ; [ H, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x67          ] ; ld              ; [ IXH, A          ] ;  8 ;  true ]
[ [0xDD, 0x68          ] ; ld              ; [ IXL, B          ] ;  8 ;  true ]
[ [0xDD, 0x69          ] ; ld              ; [ IXL, C          ] ;  8 ;  true ]
[ [0xDD, 0x6A          ] ; ld              ; [ IXL, D          ] ;  8 ;  true ]
[ [0xDD, 0x6B          ] ; ld              ; [ IXL, E          ] ;  8 ;  true ]
[ [0xDD, 0x6C          ] ; ld              ; [ IXL, IXH        ] ;  8 ;  true ]
[ [0xDD, 0x6D          ] ; ld              ; [ IXL, IXL        ] ;  8 ;  true ]
[ [0xDD, 0x6E, d       ] ; ld              ; [ L, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x6F          ] ; ld              ; [ IXL, A          ] ;  8 ;  true ]
[ [0xDD, 0x70, d       ] ; ld              ; [ (IX+d), B       ] ; 19 ; false ]
[ [0xDD, 0x71, d       ] ; ld              ; [ (IX+d), C       ] ; 19 ; false ]
[ [0xDD, 0x72, d       ] ; ld              ; [ (IX+d), D       ] ; 19 ; false ]
[ [0xDD, 0x73, d       ] ; ld              ; [ (IX+d), E       ] ; 19 ; false ]
[ [0xDD, 0x74, d       ] ; ld              ; [ (IX+d), H       ] ; 19 ; false ]
[ [0xDD, 0x75, d       ] ; ld              ; [ (IX+d), L       ] ; 19 ; false ]
[ [0xDD, 0x77, d       ] ; ld              ; [ (IX+d), A       ] ; 19 ; false ]
[ [0xDD, 0x7C          ] ; ld              ; [ A, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x7D          ] ; ld              ; [ A, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x7E, d       ] ; ld              ; [ A, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x84          ] ; add             ; [ A, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x85          ] ; add             ; [ A, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x86, d       ] ; add             ; [ A, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x8C          ] ; adc             ; [ A, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x8D          ] ; adc             ; [ A, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x8E, d       ] ; adc             ; [ A, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x94          ] ; sub             ; [ A, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x95          ] ; sub             ; [ A, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x96, d       ] ; sub             ; [ A, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0x9C          ] ; sbc             ; [ A, IXH          ] ;  8 ;  true ]
[ [0xDD, 0x9D          ] ; sbc             ; [ A, IXL          ] ;  8 ;  true ]
[ [0xDD, 0x9E, d       ] ; sbc             ; [ A, (IX+d)       ] ; 19 ; false ]
[ [0xDD, 0xA4          ] ; and             ; [ IXH             ] ;  8 ;  true ]
[ [0xDD, 0xA5          ] ; and             ; [ IXL             ] ;  8 ;  true ]
[ [0xDD, 0xA6, d       ] ; and             ; [ (IX+d)          ] ; 19 ; false ]
[ [0xDD, 0xAC          ] ; xor             ; [ IXH             ] ;  8 ;  true ]
[ [0xDD, 0xAD          ] ; xor             ; [ IXL             ] ;  8 ;  true ]
[ [0xDD, 0xAE, d       ] ; xor             ; [ (IX+d)          ] ; 19 ; false ]
[ [0xDD, 0xB4          ] ; or              ; [ IXH             ] ;  8 ;  true ]
[ [0xDD, 0xB5          ] ; or              ; [ IXL             ] ;  8 ;  true ]
[ [0xDD, 0xB6, d       ] ; or              ; [ (IX+d)          ] ; 19 ; false ]
[ [0xDD, 0xBC          ] ; cp              ; [ IXH             ] ;  8 ;  true ]
[ [0xDD, 0xBD          ] ; cp              ; [ IXL             ] ;  8 ;  true ]
[ [0xDD, 0xBE, d       ] ; cp              ; [ (IX+d)          ] ; 19 ; false ]
[ [0xDD, 0xCB, d, 0x00 ] ; rlc_store       ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x01 ] ; rlc_store       ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x02 ] ; rlc_store       ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x03 ] ; rlc_store       ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x04 ] ; rlc_store       ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x05 ] ; rlc_store       ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x06 ] ; rlc             ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x07 ] ; rlc_store       ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x08 ] ; rrc_store       ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x09 ] ; rrc_store       ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x0A ] ; rrc_store       ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x0B ] ; rrc_store       ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x0C ] ; rrc_store       ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x0D ] ; rrc_store       ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x0E ] ; rrc             ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x0F ] ; rrc_store       ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x10 ] ; rl_store        ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x11 ] ; rl_store        ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x12 ] ; rl_store        ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x13 ] ; rl_store        ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x14 ] ; rl_store        ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x15 ] ; rl_store        ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x16 ] ; rl              ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x17 ] ; rl_store        ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x18 ] ; rr_store        ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x19 ] ; rr_store        ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x1A ] ; rr_store        ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x1B ] ; rr_store        ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x1C ] ; rr_store        ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x1D ] ; rr_store        ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x1E ] ; rr              ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x1F ] ; rr_store        ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x20 ] ; sla_store       ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x21 ] ; sla_store       ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x22 ] ; sla_store       ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x23 ] ; sla_store       ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x24 ] ; sla_store       ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x25 ] ; sla_store       ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x26 ] ; sla             ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x27 ] ; sla_store       ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x28 ] ; sra_store       ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x29 ] ; sra_store       ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x2A ] ; sra_store       ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x2B ] ; sra_store       ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x2C ] ; sra_store       ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x2D ] ; sra_store       ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x2E ] ; sra             ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x2F ] ; sra_store       ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x30 ] ; sll_store       ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x31 ] ; sll_store       ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x32 ] ; sll_store       ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x33 ] ; sll_store       ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x34 ] ; sll_store       ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x35 ] ; sll_store       ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x36 ] ; sll             ; [ (IX+d)          ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x37 ] ; sll_store       ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x38 ] ; srl_store       ; [ (IX+d), B       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x39 ] ; srl_store       ; [ (IX+d), C       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x3A ] ; srl_store       ; [ (IX+d), D       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x3B ] ; srl_store       ; [ (IX+d), E       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x3C ] ; srl_store       ; [ (IX+d), H       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x3D ] ; srl_store       ; [ (IX+d), L       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x3E ] ; srl             ; [ (IX+d)          ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x3F ] ; srl_store       ; [ (IX+d), A       ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x40 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x41 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x42 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x43 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x44 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x45 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x46 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x47 ] ; bit             ; [ 0, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x48 ] ; bit             ; [ 1, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x49 ] ; bit             ; [ 1, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x4A ] ; bit             ; [ 1, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x4B ] ; bit             ; [ 1, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x4C ] ; bit             ; [ 1, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x4D ] ; bit             ; [ 1, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x4E ] ; bit             ; [ 1, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x4F ] ; bit             ; [ 1, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x50 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x51 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x52 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x53 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x54 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x55 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x56 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x57 ] ; bit             ; [ 2, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x58 ] ; bit             ; [ 3, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x59 ] ; bit             ; [ 3, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x5A ] ; bit             ; [ 3, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x5B ] ; bit             ; [ 3, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x5C ] ; bit             ; [ 3, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x5D ] ; bit             ; [ 3, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x5E ] ; bit             ; [ 3, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x5F ] ; bit             ; [ 3, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x60 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x61 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x62 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x63 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x64 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x65 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x66 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x67 ] ; bit             ; [ 4, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x68 ] ; bit             ; [ 5, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x69 ] ; bit             ; [ 5, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x6A ] ; bit             ; [ 5, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x6B ] ; bit             ; [ 5, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x6C ] ; bit             ; [ 5, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x6D ] ; bit             ; [ 5, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x6E ] ; bit             ; [ 5, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x6F ] ; bit             ; [ 5, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x70 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x71 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x72 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x73 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x74 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x75 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x76 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x77 ] ; bit             ; [ 6, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x78 ] ; bit             ; [ 7, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x79 ] ; bit             ; [ 7, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x7A ] ; bit             ; [ 7, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x7B ] ; bit             ; [ 7, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x7C ] ; bit             ; [ 7, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x7D ] ; bit             ; [ 7, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x7E ] ; bit             ; [ 7, (IX+d)       ] ; 20 ; false ]
[ [0xDD, 0xCB, d, 0x7F ] ; bit             ; [ 7, (IX+d)       ] ; 20 ;  true ]
[ [0xDD, 0xCB, d, 0x80 ] ; res_store       ; [ 0, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x81 ] ; res_store       ; [ 0, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x82 ] ; res_store       ; [ 0, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x83 ] ; res_store       ; [ 0, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x84 ] ; res_store       ; [ 0, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x85 ] ; res_store       ; [ 0, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x86 ] ; res             ; [ 0, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x87 ] ; res_store       ; [ 0, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x88 ] ; res_store       ; [ 1, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x89 ] ; res_store       ; [ 1, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x8A ] ; res_store       ; [ 1, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x8B ] ; res_store       ; [ 1, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x8C ] ; res_store       ; [ 1, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x8D ] ; res_store       ; [ 1, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x8E ] ; res             ; [ 1, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x8F ] ; res_store       ; [ 1, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x90 ] ; res_store       ; [ 2, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x91 ] ; res_store       ; [ 2, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x92 ] ; res_store       ; [ 2, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x93 ] ; res_store       ; [ 2, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x94 ] ; res_store       ; [ 2, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x95 ] ; res_store       ; [ 2, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x96 ] ; res             ; [ 2, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x97 ] ; res_store       ; [ 2, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x98 ] ; res_store       ; [ 3, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x99 ] ; res_store       ; [ 3, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x9A ] ; res_store       ; [ 3, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x9B ] ; res_store       ; [ 3, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x9C ] ; res_store       ; [ 3, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x9D ] ; res_store       ; [ 3, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0x9E ] ; res             ; [ 3, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0x9F ] ; res_store       ; [ 3, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA0 ] ; res_store       ; [ 4, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA1 ] ; res_store       ; [ 4, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA2 ] ; res_store       ; [ 4, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA3 ] ; res_store       ; [ 4, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA4 ] ; res_store       ; [ 4, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA5 ] ; res_store       ; [ 4, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA6 ] ; res             ; [ 4, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xA7 ] ; res_store       ; [ 4, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA8 ] ; res_store       ; [ 5, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xA9 ] ; res_store       ; [ 5, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xAA ] ; res_store       ; [ 5, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xAB ] ; res_store       ; [ 5, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xAC ] ; res_store       ; [ 5, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xAD ] ; res_store       ; [ 5, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xAE ] ; res             ; [ 5, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xAF ] ; res_store       ; [ 5, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB0 ] ; res_store       ; [ 6, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB1 ] ; res_store       ; [ 6, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB2 ] ; res_store       ; [ 6, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB3 ] ; res_store       ; [ 6, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB4 ] ; res_store       ; [ 6, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB5 ] ; res_store       ; [ 6, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB6 ] ; res             ; [ 6, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xB7 ] ; res_store       ; [ 6, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB8 ] ; res_store       ; [ 7, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xB9 ] ; res_store       ; [ 7, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xBA ] ; res_store       ; [ 7, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xBB ] ; res_store       ; [ 7, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xBC ] ; res_store       ; [ 7, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xBD ] ; res_store       ; [ 7, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xBE ] ; res             ; [ 7, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xBF ] ; res_store       ; [ 7, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC0 ] ; set_store       ; [ 0, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC1 ] ; set_store       ; [ 0, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC2 ] ; set_store       ; [ 0, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC3 ] ; set_store       ; [ 0, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC4 ] ; set_store       ; [ 0, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC5 ] ; set_store       ; [ 0, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC6 ] ; set             ; [ 0, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xC7 ] ; set_store       ; [ 0, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC8 ] ; set_store       ; [ 1, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xC9 ] ; set_store       ; [ 1, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xCA ] ; set_store       ; [ 1, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xCB ] ; set_store       ; [ 1, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xCC ] ; set_store       ; [ 1, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xCD ] ; set_store       ; [ 1, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xCE ] ; set             ; [ 1, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xCF ] ; set_store       ; [ 1, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD0 ] ; set_store       ; [ 2, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD1 ] ; set_store       ; [ 2, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD2 ] ; set_store       ; [ 2, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD3 ] ; set_store       ; [ 2, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD4 ] ; set_store       ; [ 2, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD5 ] ; set_store       ; [ 2, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD6 ] ; set             ; [ 2, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xD7 ] ; set_store       ; [ 2, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD8 ] ; set_store       ; [ 3, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xD9 ] ; set_store       ; [ 3, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xDA ] ; set_store       ; [ 3, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xDB ] ; set_store       ; [ 3, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xDC ] ; set_store       ; [ 3, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xDD ] ; set_store       ; [ 3, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xDE ] ; set             ; [ 3, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xDF ] ; set_store       ; [ 3, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE0 ] ; set_store       ; [ 4, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE1 ] ; set_store       ; [ 4, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE2 ] ; set_store       ; [ 4, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE3 ] ; set_store       ; [ 4, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE4 ] ; set_store       ; [ 4, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE5 ] ; set_store       ; [ 4, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE6 ] ; set             ; [ 4, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xE7 ] ; set_store       ; [ 4, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE8 ] ; set_store       ; [ 5, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xE9 ] ; set_store       ; [ 5, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xEA ] ; set_store       ; [ 5, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xEB ] ; set_store       ; [ 5, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xEC ] ; set_store       ; [ 5, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xED ] ; set_store       ; [ 5, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xEE ] ; set             ; [ 5, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xEF ] ; set_store       ; [ 5, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF0 ] ; set_store       ; [ 6, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF1 ] ; set_store       ; [ 6, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF2 ] ; set_store       ; [ 6, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF3 ] ; set_store       ; [ 6, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF4 ] ; set_store       ; [ 6, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF5 ] ; set_store       ; [ 6, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF6 ] ; set             ; [ 6, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xF7 ] ; set_store       ; [ 6, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF8 ] ; set_store       ; [ 7, (IX+d), B    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xF9 ] ; set_store       ; [ 7, (IX+d), C    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xFA ] ; set_store       ; [ 7, (IX+d), D    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xFB ] ; set_store       ; [ 7, (IX+d), E    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xFC ] ; set_store       ; [ 7, (IX+d), H    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xFD ] ; set_store       ; [ 7, (IX+d), L    ] ; 23 ;  true ]
[ [0xDD, 0xCB, d, 0xFE ] ; set             ; [ 7, (IX+d)       ] ; 23 ; false ]
[ [0xDD, 0xCB, d, 0xFF ] ; set_store       ; [ 7, (IX+d), A    ] ; 23 ;  true ]
[ [0xDD, 0xE1          ] ; pop             ; [ IX              ] ; 14 ; false ]
[ [0xDD, 0xE3          ] ; ex              ; [ (SP), IX        ] ; 23 ; false ]
[ [0xDD, 0xE5          ] ; push            ; [ IX              ] ; 15 ; false ]
[ [0xDD, 0xE9          ] ; jp              ; [ IX              ] ;  8 ; false ]
[ [0xDD, 0xF9          ] ; ld16            ; [ SP, IX          ] ; 10 ; false ]
[ [0xDE, n             ] ; sbc             ; [ A, $n           ] ;  7 ; false ]
[ [0xDF                ] ; rst             ; [ 0x18            ] ; 11 ; false ]
[ [0xE0                ] ; retcc           ; [ POcc            ] ;  5 ; false ]
[ [0xE1                ] ; pop             ; [ HL              ] ; 10 ; false ]
[ [0xE2, n, n          ] ; jpcc            ; [ POcc, $nn       ] ; 10 ; false ]
[ [0xE3                ] ; ex              ; [ (SP), HL        ] ; 19 ; false ]
[ [0xE4, n, n          ] ; callcc          ; [ POcc, $nn       ] ;  0 ; false ]
[ [0xE5                ] ; push            ; [ HL              ] ; 11 ; false ]
[ [0xE6, n             ] ; and             ; [ $n              ] ;  7 ; false ]
[ [0xE7                ] ; rst             ; [ 0x20            ] ; 11 ; false ]
[ [0xE8                ] ; retcc           ; [ PEcc            ] ;  5 ; false ]
[ [0xE9                ] ; jp              ; [ HL              ] ;  4 ; false ]
[ [0xEA, n, n          ] ; jpcc            ; [ PEcc, $nn       ] ; 10 ; false ]
[ [0xEB                ] ; ex              ; [ DE, HL          ] ;  4 ; false ]
[ [0xEC, n, n          ] ; callcc          ; [ PEcc, $nn       ] ;  0 ; false ]
[ [0xED, 0x40          ] ; in_c            ; [ B, C            ] ; 12 ; false ]
[ [0xED, 0x41          ] ; out_c           ; [ C, B            ] ; 12 ; false ]
[ [0xED, 0x42          ] ; sbc16           ; [ HL, BC          ] ; 15 ; false ]
[ [0xED, 0x43, n, n    ] ; ld16            ; [ ($nn), BC       ] ; 20 ; false ]
[ [0xED, 0x44          ] ; neg             ; [                 ] ;  8 ; false ]
[ [0xED, 0x45          ] ; retn            ; [                 ] ; 14 ; false ]
[ [0xED, 0x46          ] ; im              ; [ 0               ] ;  8 ; false ]
[ [0xED, 0x47          ] ; ld              ; [ I, A            ] ;  9 ; false ]
[ [0xED, 0x48          ] ; in_c            ; [ C, C            ] ; 12 ; false ]
[ [0xED, 0x49          ] ; out_c           ; [ C, C            ] ; 12 ; false ]
[ [0xED, 0x4A          ] ; adc16           ; [ HL, BC          ] ; 15 ; false ]
[ [0xED, 0x4B, n, n    ] ; ld16            ; [ BC, ($nn)       ] ; 20 ; false ]
[ [0xED, 0x4C          ] ; neg             ; [                 ] ;  8 ;  true ]
[ [0xED, 0x4D          ] ; reti            ; [                 ] ; 14 ; false ]
[ [0xED, 0x4E          ] ; im              ; [ 0               ] ;  8 ;  true ]
[ [0xED, 0x4F          ] ; ld              ; [ R, A            ] ;  9 ; false ]
[ [0xED, 0x50          ] ; in_c            ; [ D, C            ] ; 12 ; false ]
[ [0xED, 0x51          ] ; out_c           ; [ C, D            ] ; 12 ; false ]
[ [0xED, 0x52          ] ; sbc16           ; [ HL, DE          ] ; 15 ; false ]
[ [0xED, 0x53, n, n    ] ; ld16            ; [ ($nn), DE       ] ; 20 ; false ]
[ [0xED, 0x54          ] ; neg             ; [                 ] ;  8 ;  true ]
[ [0xED, 0x55          ] ; retn            ; [                 ] ; 14 ;  true ]
[ [0xED, 0x56          ] ; im              ; [ 1               ] ;  8 ; false ]
[ [0xED, 0x57          ] ; ld_ir           ; [ A, I            ] ;  9 ; false ]
[ [0xED, 0x58          ] ; in_c            ; [ E, C            ] ; 12 ; false ]
[ [0xED, 0x59          ] ; out_c           ; [ C, E            ] ; 12 ; false ]
[ [0xED, 0x5A          ] ; adc16           ; [ HL, DE          ] ; 15 ; false ]
[ [0xED, 0x5B, n, n    ] ; ld16            ; [ DE, ($nn)       ] ; 20 ; false ]
[ [0xED, 0x5C          ] ; neg             ; [                 ] ;  8 ;  true ]
[ [0xED, 0x5D          ] ; retn            ; [                 ] ; 14 ;  true ]
[ [0xED, 0x5E          ] ; im              ; [ 2               ] ;  8 ; false ]
[ [0xED, 0x5F          ] ; ld_ir           ; [ A, R            ] ;  9 ; false ]
[ [0xED, 0x60          ] ; in_c            ; [ H, C            ] ; 12 ; false ]
[ [0xED, 0x61          ] ; out_c           ; [ C, H            ] ; 12 ; false ]
[ [0xED, 0x62          ] ; sbc16           ; [ HL, HL          ] ; 15 ; false ]
[ [0xED, 0x63, n, n    ] ; ld16            ; [ ($nn), HL       ] ; 20 ; false ]
[ [0xED, 0x64          ] ; neg             ; [                 ] ;  8 ;  true ]
[ [0xED, 0x65          ] ; retn            ; [                 ] ; 14 ;  true ]
[ [0xED, 0x66          ] ; im              ; [ 0               ] ;  8 ;  true ]
[ [0xED, 0x67          ] ; rrd             ; [                 ] ; 18 ; false ]
[ [0xED, 0x68          ] ; in_c            ; [ L, C            ] ; 12 ; false ]
[ [0xED, 0x69          ] ; out_c           ; [ C, L            ] ; 12 ; false ]
[ [0xED, 0x6A          ] ; adc16           ; [ HL, HL          ] ; 15 ; false ]
[ [0xED, 0x6B, n, n    ] ; ld16            ; [ HL, ($nn)       ] ; 20 ; false ]
[ [0xED, 0x6C          ] ; neg             ; [                 ] ;  8 ;  true ]
[ [0xED, 0x6D          ] ; retn            ; [                 ] ; 14 ;  true ]
[ [0xED, 0x6E          ] ; im              ; [ 0               ] ;  8 ;  true ]
[ [0xED, 0x6F          ] ; rld             ; [                 ] ; 18 ; false ]
[ [0xED, 0x70          ] ; in_f            ; [ C               ] ; 12 ;  true ]
[ [0xED, 0x71          ] ; out_c           ; [ C, 0            ] ; 12 ;  true ]
[ [0xED, 0x72          ] ; sbc16           ; [ HL, SP          ] ; 15 ; false ]
[ [0xED, 0x73, n, n    ] ; ld16            ; [ ($nn), SP       ] ; 20 ; false ]
[ [0xED, 0x74          ] ; neg             ; [                 ] ;  8 ;  true ]
[ [0xED, 0x75          ] ; retn            ; [                 ] ; 14 ;  true ]
[ [0xED, 0x76          ] ; im              ; [ 1               ] ;  8 ;  true ]
[ [0xED, 0x78          ] ; in_c            ; [ A, C            ] ; 12 ; false ]
[ [0xED, 0x79          ] ; out_c           ; [ C, A            ] ; 12 ; false ]
[ [0xED, 0x7A          ] ; adc16           ; [ HL, SP          ] ; 15 ; false ]
[ [0xED, 0x7B, n, n    ] ; ld16            ; [ SP, ($nn)       ] ; 20 ; false ]
[ [0xED, 0x7C          ] ; neg             ; [                 ] ;  8 ;  true ]
[ [0xED, 0x7D          ] ; retn            ; [                 ] ; 14 ;  true ]
[ [0xED, 0x7E          ] ; im              ; [ 2               ] ;  8 ;  true ]
[ [0xED, 0xA0          ] ; ldi             ; [                 ] ; 16 ; false ]
[ [0xED, 0xA1          ] ; cpi             ; [                 ] ; 16 ; false ]
[ [0xED, 0xA2          ] ; ini             ; [                 ] ; 16 ; false ]
[ [0xED, 0xA3          ] ; outi            ; [                 ] ; 16 ; false ]
[ [0xED, 0xA8          ] ; ldd             ; [                 ] ; 16 ; false ]
[ [0xED, 0xA9          ] ; cpd             ; [                 ] ; 16 ; false ]
[ [0xED, 0xAA          ] ; ind             ; [                 ] ; 16 ; false ]
[ [0xED, 0xAB          ] ; outd            ; [                 ] ; 16 ; false ]
[ [0xED, 0xB0          ] ; ldir            ; [                 ] ;  0 ; false ]
[ [0xED, 0xB1          ] ; cpir            ; [                 ] ;  0 ; false ]
[ [0xED, 0xB2          ] ; inir            ; [                 ] ;  0 ; false ]
[ [0xED, 0xB3          ] ; otir            ; [                 ] ;  0 ; false ]
[ [0xED, 0xB8          ] ; lddr            ; [                 ] ;  0 ; false ]
[ [0xED, 0xB9          ] ; cpdr            ; [                 ] ;  0 ; false ]
[ [0xED, 0xBA          ] ; indr            ; [                 ] ;  0 ; false ]
[ [0xED, 0xBB          ] ; otdr            ; [                 ] ;  0 ; false ]
[ [0xEE, n             ] ; xor             ; [ $n              ] ;  7 ; false ]
[ [0xEF                ] ; rst             ; [ 0x28            ] ; 11 ; false ]
[ [0xF0                ] ; retcc           ; [ Pcc             ] ;  5 ; false ]
[ [0xF1                ] ; pop             ; [ AF              ] ; 10 ; false ]
[ [0xF2, n, n          ] ; jpcc            ; [ Pcc, $nn        ] ; 10 ; false ]
[ [0xF3                ] ; di              ; [                 ] ;  4 ; false ]
[ [0xF4, n, n          ] ; callcc          ; [ Pcc, $nn        ] ;  0 ; false ]
[ [0xF5                ] ; push            ; [ AF              ] ; 11 ; false ]
[ [0xF6, n             ] ; or              ; [ $n              ] ;  7 ; false ]
[ [0xF7                ] ; rst             ; [ 0x30            ] ; 11 ; false ]
[ [0xF8                ] ; retcc           ; [ Mcc             ] ;  5 ; false ]
[ [0xF9                ] ; ld16            ; [ SP, HL          ] ;  6 ; false ]
[ [0xFA, n, n          ] ; jpcc            ; [ Mcc, $nn        ] ; 10 ; false ]
[ [0xFB                ] ; ei              ; [                 ] ;  4 ; false ]
[ [0xFC, n, n          ] ; callcc          ; [ Mcc, $nn        ] ;  0 ; false ]
[ [0xFD, 0x09          ] ; add16           ; [ IY, BC          ] ; 15 ; false ]
[ [0xFD, 0x19          ] ; add16           ; [ IY, DE          ] ; 15 ; false ]
[ [0xFD, 0x21, n, n    ] ; ld16            ; [ IY, $nn         ] ; 14 ; false ]
[ [0xFD, 0x22, n, n    ] ; ld16            ; [ ($nn), IY       ] ; 20 ; false ]
[ [0xFD, 0x23          ] ; inc16           ; [ IY              ] ; 10 ; false ]
[ [0xFD, 0x24          ] ; inc             ; [ IYH             ] ;  8 ;  true ]
[ [0xFD, 0x25          ] ; dec             ; [ IYH             ] ;  8 ;  true ]
[ [0xFD, 0x26, n       ] ; ld              ; [ IYH, $n         ] ; 11 ;  true ]
[ [0xFD, 0x29          ] ; add16           ; [ IY, IY          ] ; 15 ; false ]
[ [0xFD, 0x2A, n, n    ] ; ld16            ; [ IY, ($nn)       ] ; 20 ; false ]
[ [0xFD, 0x2B          ] ; dec16           ; [ IY              ] ; 10 ; false ]
[ [0xFD, 0x2C          ] ; inc             ; [ IYL             ] ;  8 ;  true ]
[ [0xFD, 0x2D          ] ; dec             ; [ IYL             ] ;  8 ;  true ]
[ [0xFD, 0x2E, n       ] ; ld              ; [ IYL, $n         ] ; 11 ;  true ]
[ [0xFD, 0x34, d       ] ; inc             ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0x35, d       ] ; dec             ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0x36, d, n    ] ; ld              ; [ (IY+d), $n      ] ; 19 ; false ]
[ [0xFD, 0x39          ] ; add16           ; [ IY, SP          ] ; 15 ; false ]
[ [0xFD, 0x44          ] ; ld              ; [ B, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x45          ] ; ld              ; [ B, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x46, d       ] ; ld              ; [ B, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x4C          ] ; ld              ; [ C, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x4D          ] ; ld              ; [ C, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x4E, d       ] ; ld              ; [ C, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x54          ] ; ld              ; [ D, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x55          ] ; ld              ; [ D, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x56, d       ] ; ld              ; [ D, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x5C          ] ; ld              ; [ E, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x5D          ] ; ld              ; [ E, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x5E, d       ] ; ld              ; [ E, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x60          ] ; ld              ; [ IYH, B          ] ;  8 ;  true ]
[ [0xFD, 0x61          ] ; ld              ; [ IYH, C          ] ;  8 ;  true ]
[ [0xFD, 0x62          ] ; ld              ; [ IYH, D          ] ;  8 ;  true ]
[ [0xFD, 0x63          ] ; ld              ; [ IYH, E          ] ;  8 ;  true ]
[ [0xFD, 0x64          ] ; ld              ; [ IYH, IYH        ] ;  8 ;  true ]
[ [0xFD, 0x65          ] ; ld              ; [ IYH, IYL        ] ;  8 ;  true ]
[ [0xFD, 0x66, d       ] ; ld              ; [ H, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x67          ] ; ld              ; [ IYH, A          ] ;  8 ;  true ]
[ [0xFD, 0x68          ] ; ld              ; [ IYL, B          ] ;  8 ;  true ]
[ [0xFD, 0x69          ] ; ld              ; [ IYL, C          ] ;  8 ;  true ]
[ [0xFD, 0x6A          ] ; ld              ; [ IYL, D          ] ;  8 ;  true ]
[ [0xFD, 0x6B          ] ; ld              ; [ IYL, E          ] ;  8 ;  true ]
[ [0xFD, 0x6C          ] ; ld              ; [ IYL, IYH        ] ;  8 ;  true ]
[ [0xFD, 0x6D          ] ; ld              ; [ IYL, IYL        ] ;  8 ;  true ]
[ [0xFD, 0x6E, d       ] ; ld              ; [ L, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x6F          ] ; ld              ; [ IYL, A          ] ;  8 ;  true ]
[ [0xFD, 0x70, d       ] ; ld              ; [ (IY+d), B       ] ; 19 ; false ]
[ [0xFD, 0x71, d       ] ; ld              ; [ (IY+d), C       ] ; 19 ; false ]
[ [0xFD, 0x72, d       ] ; ld              ; [ (IY+d), D       ] ; 19 ; false ]
[ [0xFD, 0x73, d       ] ; ld              ; [ (IY+d), E       ] ; 19 ; false ]
[ [0xFD, 0x74, d       ] ; ld              ; [ (IY+d), H       ] ; 19 ; false ]
[ [0xFD, 0x75, d       ] ; ld              ; [ (IY+d), L       ] ; 19 ; false ]
[ [0xFD, 0x77, d       ] ; ld              ; [ (IY+d), A       ] ; 19 ; false ]
[ [0xFD, 0x7C          ] ; ld              ; [ A, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x7D          ] ; ld              ; [ A, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x7E, d       ] ; ld              ; [ A, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x84          ] ; add             ; [ A, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x85          ] ; add             ; [ A, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x86, d       ] ; add             ; [ A, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x8C          ] ; adc             ; [ A, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x8D          ] ; adc             ; [ A, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x8E, d       ] ; adc             ; [ A, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x94          ] ; sub             ; [ A, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x95          ] ; sub             ; [ A, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x96, d       ] ; sub             ; [ A, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0x9C          ] ; sbc             ; [ A, IYH          ] ;  8 ;  true ]
[ [0xFD, 0x9D          ] ; sbc             ; [ A, IYL          ] ;  8 ;  true ]
[ [0xFD, 0x9E, d       ] ; sbc             ; [ A, (IY+d)       ] ; 19 ; false ]
[ [0xFD, 0xA4          ] ; and             ; [ IYH             ] ;  8 ;  true ]
[ [0xFD, 0xA5          ] ; and             ; [ IYL             ] ;  8 ;  true ]
[ [0xFD, 0xA6, d       ] ; and             ; [ (IY+d)          ] ; 19 ; false ]
[ [0xFD, 0xAC          ] ; xor             ; [ IYH             ] ;  8 ;  true ]
[ [0xFD, 0xAD          ] ; xor             ; [ IYL             ] ;  8 ;  true ]
[ [0xFD, 0xAE, d       ] ; xor             ; [ (IY+d)          ] ; 19 ; false ]
[ [0xFD, 0xB4          ] ; or              ; [ IYH             ] ;  8 ;  true ]
[ [0xFD, 0xB5          ] ; or              ; [ IYL             ] ;  8 ;  true ]
[ [0xFD, 0xB6, d       ] ; or              ; [ (IY+d)          ] ; 19 ; false ]
[ [0xFD, 0xBC          ] ; cp              ; [ IYH             ] ;  8 ;  true ]
[ [0xFD, 0xBD          ] ; cp              ; [ IYL             ] ;  8 ;  true ]
[ [0xFD, 0xBE, d       ] ; cp              ; [ (IY+d)          ] ; 19 ; false ]
[ [0xFD, 0xCB, d, 0x00 ] ; rlc_store       ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x01 ] ; rlc_store       ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x02 ] ; rlc_store       ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x03 ] ; rlc_store       ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x04 ] ; rlc_store       ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x05 ] ; rlc_store       ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x06 ] ; rlc             ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x07 ] ; rlc_store       ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x08 ] ; rrc_store       ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x09 ] ; rrc_store       ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x0A ] ; rrc_store       ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x0B ] ; rrc_store       ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x0C ] ; rrc_store       ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x0D ] ; rrc_store       ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x0E ] ; rrc             ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x0F ] ; rrc_store       ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x10 ] ; rl_store        ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x11 ] ; rl_store        ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x12 ] ; rl_store        ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x13 ] ; rl_store        ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x14 ] ; rl_store        ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x15 ] ; rl_store        ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x16 ] ; rl              ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x17 ] ; rl_store        ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x18 ] ; rr_store        ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x19 ] ; rr_store        ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x1A ] ; rr_store        ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x1B ] ; rr_store        ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x1C ] ; rr_store        ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x1D ] ; rr_store        ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x1E ] ; rr              ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x1F ] ; rr_store        ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x20 ] ; sla_store       ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x21 ] ; sla_store       ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x22 ] ; sla_store       ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x23 ] ; sla_store       ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x24 ] ; sla_store       ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x25 ] ; sla_store       ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x26 ] ; sla             ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x27 ] ; sla_store       ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x28 ] ; sra_store       ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x29 ] ; sra_store       ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x2A ] ; sra_store       ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x2B ] ; sra_store       ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x2C ] ; sra_store       ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x2D ] ; sra_store       ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x2E ] ; sra             ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x2F ] ; sra_store       ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x30 ] ; sll_store       ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x31 ] ; sll_store       ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x32 ] ; sll_store       ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x33 ] ; sll_store       ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x34 ] ; sll_store       ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x35 ] ; sll_store       ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x36 ] ; sll             ; [ (IY+d)          ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x37 ] ; sll_store       ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x38 ] ; srl_store       ; [ (IY+d), B       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x39 ] ; srl_store       ; [ (IY+d), C       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x3A ] ; srl_store       ; [ (IY+d), D       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x3B ] ; srl_store       ; [ (IY+d), E       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x3C ] ; srl_store       ; [ (IY+d), H       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x3D ] ; srl_store       ; [ (IY+d), L       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x3E ] ; srl             ; [ (IY+d)          ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x3F ] ; srl_store       ; [ (IY+d), A       ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x40 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x41 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x42 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x43 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x44 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x45 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x46 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x47 ] ; bit             ; [ 0, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x48 ] ; bit             ; [ 1, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x49 ] ; bit             ; [ 1, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x4A ] ; bit             ; [ 1, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x4B ] ; bit             ; [ 1, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x4C ] ; bit             ; [ 1, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x4D ] ; bit             ; [ 1, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x4E ] ; bit             ; [ 1, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x4F ] ; bit             ; [ 1, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x50 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x51 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x52 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x53 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x54 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x55 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x56 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x57 ] ; bit             ; [ 2, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x58 ] ; bit             ; [ 3, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x59 ] ; bit             ; [ 3, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x5A ] ; bit             ; [ 3, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x5B ] ; bit             ; [ 3, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x5C ] ; bit             ; [ 3, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x5D ] ; bit             ; [ 3, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x5E ] ; bit             ; [ 3, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x5F ] ; bit             ; [ 3, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x60 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x61 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x62 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x63 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x64 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x65 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x66 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x67 ] ; bit             ; [ 4, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x68 ] ; bit             ; [ 5, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x69 ] ; bit             ; [ 5, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x6A ] ; bit             ; [ 5, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x6B ] ; bit             ; [ 5, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x6C ] ; bit             ; [ 5, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x6D ] ; bit             ; [ 5, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x6E ] ; bit             ; [ 5, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x6F ] ; bit             ; [ 5, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x70 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x71 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x72 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x73 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x74 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x75 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x76 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x77 ] ; bit             ; [ 6, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x78 ] ; bit             ; [ 7, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x79 ] ; bit             ; [ 7, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x7A ] ; bit             ; [ 7, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x7B ] ; bit             ; [ 7, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x7C ] ; bit             ; [ 7, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x7D ] ; bit             ; [ 7, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x7E ] ; bit             ; [ 7, (IY+d)       ] ; 20 ; false ]
[ [0xFD, 0xCB, d, 0x7F ] ; bit             ; [ 7, (IY+d)       ] ; 20 ;  true ]
[ [0xFD, 0xCB, d, 0x80 ] ; res_store       ; [ 0, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x81 ] ; res_store       ; [ 0, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x82 ] ; res_store       ; [ 0, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x83 ] ; res_store       ; [ 0, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x84 ] ; res_store       ; [ 0, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x85 ] ; res_store       ; [ 0, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x86 ] ; res             ; [ 0, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x87 ] ; res_store       ; [ 0, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x88 ] ; res_store       ; [ 1, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x89 ] ; res_store       ; [ 1, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x8A ] ; res_store       ; [ 1, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x8B ] ; res_store       ; [ 1, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x8C ] ; res_store       ; [ 1, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x8D ] ; res_store       ; [ 1, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x8E ] ; res             ; [ 1, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x8F ] ; res_store       ; [ 1, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x90 ] ; res_store       ; [ 2, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x91 ] ; res_store       ; [ 2, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x92 ] ; res_store       ; [ 2, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x93 ] ; res_store       ; [ 2, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x94 ] ; res_store       ; [ 2, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x95 ] ; res_store       ; [ 2, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x96 ] ; res             ; [ 2, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x97 ] ; res_store       ; [ 2, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x98 ] ; res_store       ; [ 3, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x99 ] ; res_store       ; [ 3, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x9A ] ; res_store       ; [ 3, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x9B ] ; res_store       ; [ 3, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x9C ] ; res_store       ; [ 3, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x9D ] ; res_store       ; [ 3, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0x9E ] ; res             ; [ 3, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0x9F ] ; res_store       ; [ 3, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA0 ] ; res_store       ; [ 4, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA1 ] ; res_store       ; [ 4, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA2 ] ; res_store       ; [ 4, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA3 ] ; res_store       ; [ 4, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA4 ] ; res_store       ; [ 4, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA5 ] ; res_store       ; [ 4, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA6 ] ; res             ; [ 4, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xA7 ] ; res_store       ; [ 4, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA8 ] ; res_store       ; [ 5, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xA9 ] ; res_store       ; [ 5, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xAA ] ; res_store       ; [ 5, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xAB ] ; res_store       ; [ 5, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xAC ] ; res_store       ; [ 5, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xAD ] ; res_store       ; [ 5, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xAE ] ; res             ; [ 5, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xAF ] ; res_store       ; [ 5, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB0 ] ; res_store       ; [ 6, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB1 ] ; res_store       ; [ 6, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB2 ] ; res_store       ; [ 6, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB3 ] ; res_store       ; [ 6, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB4 ] ; res_store       ; [ 6, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB5 ] ; res_store       ; [ 6, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB6 ] ; res             ; [ 6, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xB7 ] ; res_store       ; [ 6, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB8 ] ; res_store       ; [ 7, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xB9 ] ; res_store       ; [ 7, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xBA ] ; res_store       ; [ 7, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xBB ] ; res_store       ; [ 7, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xBC ] ; res_store       ; [ 7, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xBD ] ; res_store       ; [ 7, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xBE ] ; res             ; [ 7, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xBF ] ; res_store       ; [ 7, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC0 ] ; set_store       ; [ 0, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC1 ] ; set_store       ; [ 0, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC2 ] ; set_store       ; [ 0, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC3 ] ; set_store       ; [ 0, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC4 ] ; set_store       ; [ 0, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC5 ] ; set_store       ; [ 0, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC6 ] ; set             ; [ 0, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xC7 ] ; set_store       ; [ 0, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC8 ] ; set_store       ; [ 1, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xC9 ] ; set_store       ; [ 1, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xCA ] ; set_store       ; [ 1, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xCB ] ; set_store       ; [ 1, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xCC ] ; set_store       ; [ 1, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xCD ] ; set_store       ; [ 1, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xCE ] ; set             ; [ 1, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xCF ] ; set_store       ; [ 1, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD0 ] ; set_store       ; [ 2, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD1 ] ; set_store       ; [ 2, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD2 ] ; set_store       ; [ 2, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD3 ] ; set_store       ; [ 2, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD4 ] ; set_store       ; [ 2, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD5 ] ; set_store       ; [ 2, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD6 ] ; set             ; [ 2, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xD7 ] ; set_store       ; [ 2, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD8 ] ; set_store       ; [ 3, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xD9 ] ; set_store       ; [ 3, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xDA ] ; set_store       ; [ 3, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xDB ] ; set_store       ; [ 3, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xDC ] ; set_store       ; [ 3, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xDD ] ; set_store       ; [ 3, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xDE ] ; set             ; [ 3, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xDF ] ; set_store       ; [ 3, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE0 ] ; set_store       ; [ 4, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE1 ] ; set_store       ; [ 4, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE2 ] ; set_store       ; [ 4, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE3 ] ; set_store       ; [ 4, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE4 ] ; set_store       ; [ 4, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE5 ] ; set_store       ; [ 4, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE6 ] ; set             ; [ 4, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xE7 ] ; set_store       ; [ 4, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE8 ] ; set_store       ; [ 5, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xE9 ] ; set_store       ; [ 5, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xEA ] ; set_store       ; [ 5, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xEB ] ; set_store       ; [ 5, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xEC ] ; set_store       ; [ 5, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xED ] ; set_store       ; [ 5, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xEE ] ; set             ; [ 5, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xEF ] ; set_store       ; [ 5, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF0 ] ; set_store       ; [ 6, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF1 ] ; set_store       ; [ 6, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF2 ] ; set_store       ; [ 6, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF3 ] ; set_store       ; [ 6, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF4 ] ; set_store       ; [ 6, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF5 ] ; set_store       ; [ 6, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF6 ] ; set             ; [ 6, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xF7 ] ; set_store       ; [ 6, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF8 ] ; set_store       ; [ 7, (IY+d), B    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xF9 ] ; set_store       ; [ 7, (IY+d), C    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xFA ] ; set_store       ; [ 7, (IY+d), D    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xFB ] ; set_store       ; [ 7, (IY+d), E    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xFC ] ; set_store       ; [ 7, (IY+d), H    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xFD ] ; set_store       ; [ 7, (IY+d), L    ] ; 23 ;  true ]
[ [0xFD, 0xCB, d, 0xFE ] ; set             ; [ 7, (IY+d)       ] ; 23 ; false ]
[ [0xFD, 0xCB, d, 0xFF ] ; set_store       ; [ 7, (IY+d), A    ] ; 23 ;  true ]
[ [0xFD, 0xE1          ] ; pop             ; [ IY              ] ; 14 ; false ]
[ [0xFD, 0xE3          ] ; ex              ; [ (SP), IY        ] ; 23 ; false ]
[ [0xFD, 0xE5          ] ; push            ; [ IY              ] ; 15 ; false ]
[ [0xFD, 0xE9          ] ; jp              ; [ IY              ] ;  8 ; false ]
[ [0xFD, 0xF9          ] ; ld16            ; [ SP, IY          ] ; 10 ; false ]
[ [0xFE, n             ] ; cp              ; [ $n              ] ;  7 ; false ]
[ [0xFF                ] ; rst             ; [ 0x38            ] ; 11 ; false ]
        };
    };
}
